{
  "name": "enchilada",
  "version": "0.4.1",
  "description": "express/connect middleware for javascript bundles",
  "main": "index.js",
  "scripts": {
    "test": "mocha test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shtylman/node-enchilada.git"
  },
  "keywords": [
    "express",
    "script",
    "bundle"
  ],
  "author": {
    "name": "Roman Shtylman",
    "email": "shtylman@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "mime": "1.2.9",
    "browserify": "shtylman/node-browserify#399b96d",
    "uglify-js": "2.3.6",
    "through": "2.3.4",
    "debug": "0.7.2"
  },
  "devDependencies": {
    "connect": "2.8.4",
    "mocha": "1.12.0",
    "after": "0.8.1",
    "supertest": "0.7.1",
    "express": "3.3.4"
  },
  "readme": "# enchilada [![Build Status](https://secure.travis-ci.org/shtylman/node-enchilada.png?branch=master)](http://travis-ci.org/shtylman/node-enchilada)\n\nserve up your javascript files all wrapped up using [browserify](https://github.com/substack/node-browserify). Yum!\n\n```javascript\nvar app = express();\n\n// serves up all your javascript files, handling all require() calls\napp.use(enchilada(__dirname + '/public'));\n\n// fallback for other static resources\napp.use(express.static(__dirname + '/public'));\n```\n\nNow just visit any ```.js``` url which maps to a path under /public and the packaged file will be served.\n\n## with ingredients\n\nNo one likes a stale enchilada. Out in the real world, you want to leverage browser caching for rarely changing files. Imagine that your project uses files like jquery or [engine.io](https://github.com/LearnBoost/engine.io-client), these files don't change as much as your app code. It would be silly to keep sending them with every js file you serve up. Enchilada makes this easy to do.\n\nJust add the proper ingredients and your enchilada will be served up as you requested.\n\n```javascript\napp.use(enchilada({\n    src: __dirname + '/public', // location of your js files\n    cache: true || false, // default false (use true for production to disable file watching)\n    compress: true || false, // default false\n    debug: true || false, // default false (enable sourcemap output with bundle)\n    watchCallback: function(filename) {}, // optional (use to do something clever, like tell client to reload the page)\n    routes: {\n        // key is the url route, value is either a file relative to src\n        '/js/jquery.js': './js/jquery.js',\n        // or a module installed via npm\n        '/js/engine.io.js': 'engine.io-client'\n    },\n    transforms: [ handleify, brfs ]\n}));\n```\n\nNow just make sure you load the required scripts before any other js file that might use them.\n\n```html\n<!-- load the scripts we know will be used by several files -->\n<script src=\"/js/jquery.js\"></script>\n<script src=\"/js/engine.io.js\"></script>\n\n<!-- load other js files as you would before -->\n<script src=\"/js/app.js\"></script>\n```\n\n## examples\n\nSee the [examples](examples) directory for working code you can copy and paste.\n\n## install\n\nInstall with [npm](https://npmjs.org)\n\n```shell\nnpm install enchilada\n```\n",
  "readmeFilename": "README.md",
  "_id": "enchilada@0.4.1",
  "dist": {
    "shasum": "9a41e5d1c9d21a82591dd1174257235801d633d5"
  },
  "_from": "enchilada@",
  "_resolved": "https://registry.npmjs.org/enchilada/-/enchilada-0.4.1.tgz"
}
